/**
    npm install 시 의존성 에러 발생하면 뒤에 --save --legacy-peer-deps : 종속된거 무시하고 설치 안되면 --force로 업데이트 후 설치
==============================================================================================================
app.module == 모든 컨트롤러 및 서비스 통합본 이라고 생각하면 편함
리액트에서 상태변수 관리로 toolkit을 쓰는 경우 모든 슬라이스를 모아둔 store 정도?
import == 타 모듈들 들어가고
controller == 타 모듈이 없는 경우 만든 controller들이 들어감
provider == service 들어감
==============================================================================================================
@ 문법 == 데코레이터 == 클래스에 함수기능을 얹혀주는 느낌?
또한 레이어를 쌓는듯한 느낌이라
@~~~~{
    @~~
    @~~~
}
이런식으로 겹겹히 쌓아서 작동
==============================================================================================================
router@()들
@Get(),@Post() 이 둘은 우리가 흔히 아는 데이터 전송 방식?
@Delete() : 데이터 삭제
@Fatch() : 데이터 업데이트
자세한건 추 후 공부하고 업데이트
==============================================================================================================
@Param("") : 파라미터로는 파람스 받고 ex) id,name 등등
@Body() : 무언가 요청받을 때 데이터가 필요한 경우 선언해줘야함
@Query("~~") : url에서 (/~~ = "스트링") 스트링부분을 가져올 때임

또한
@Get(){
@Param(":id") 이런식으로 선언하면 그 아래에 있는

@Get("hihi"){} 보다 위의 겟에서 우리가 의도한 localhost:port/hihi이지만 id == hihi로 인식해서 걸리기에 꼭 : @Param("id") 보다 위에 선언해주길 바람
}
==============================================================================================================
Error 예외처리
NotFoundException
==============================================================================================================
==============================================================================================================
==============================================================================================================
==============================================================================================================
==============================================================================================================
==============================================================================================================
 */
