// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users{
  id Int @default(autoincrement()) @id
  user_email String @unique
  user_wallet_address String @unique
  user_name String @unique
  is_creator Boolean @default(false)
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  ticket Boolean @default(false)
  signup_status Boolean @default(false)
  user_profile_image String @default("")
  ticket_list tickets[]
  creator_list creator[]
  favoliste favorites[]
  playlist playlist[]
  fundinglist funding[]
}

model creator{
  id Int @default(autoincrement()) @id
  creators_id users @relation(fields: [creator_id],references: [id])
  creator_id Int 
  creator_CA String?
  creator_abi String?
}

model tickets{
  id Int @default(autoincrement()) @id
  ticket_name String 
  ticket_period Int // 달 아니고 일로 받음
  users_id users @relation(fields: [user_id],references: [id])
  user_id Int 
  created_at DateTime @default(now())
}

model albums{
  id Int @default(autoincrement()) @id
  album_name String
  singer String
  music_list musics[]
}

model musics{
  id Int @default(autoincrement()) @id
  music_name String
  music_lyrics String?
  music_genre String
  music_maker String
  lyrics_maker String?
  singer String
  play_number Int @default(0)
  albums albums @relation(fields: [album_id], references: [id])
  album_id Int
  favorite favorites[]
  playlist playlist[]
}

model funding{
  id Int @default(autoincrement()) @id
  creator_idss users @relation(fields: [creator_id],references: [id])
  creator_id Int 
  creator_wallet_address String
  category String?
  music_maker_info_url String? @db.VarChar(300) // sns or info
  lyrics_maker_info_url String? @db.VarChar(300)// sns or info
  singer_info_url String? @db.VarChar(300)
  music_feel Int @default(0)
  funding_cover_image String @default("default_profile_image.png")
  funding_info String @db.VarChar(10000)
  created_at DateTime @default(now())
  start_date DateTime
  sale_date DateTime
  music_maker funding_music_maker[]
  lyrics_maker funding_lyrics_maker[]
  singer funding_singer[]
}

model funding_music_maker{
  id Int @default(autoincrement()) @id
  funding_ids funding @relation(fields: [funding_id],references: [id])
  funding_id Int
  name String?
  sex String?
  age Int?
  about_me String? @db.VarChar(3000)
}

model funding_lyrics_maker{
  id Int @default(autoincrement()) @id
  funding_ids funding @relation(fields: [funding_id],references: [id])
  funding_id Int
  name String?
  sex String?
  age Int?
  about_me String? @db.VarChar(3000)
}

model funding_singer{
  id Int @default(autoincrement()) @id
  funding_ids funding @relation(fields: [funding_id],references: [id])
  funding_id Int
  name String?
  sex String?
  age Int?
  about_me String? @db.VarChar(3000)
}

model favorites{
  id Int @default(autoincrement()) @id
  users_id users @relation(fields: [user_id],references: [id])
  user_id Int
  musics_id musics @relation(fields: [music_id],references: [id])
  music_id Int
}

model playlist{
  id Int @default(autoincrement()) @id
  users_id users @relation(fields: [user_id],references: [id])
  user_id Int
  musics_id musics @relation(fields: [music_id],references: [id])
  music_id Int
}


// 펀딩 == 민팅 펀딩할 때 nft 민팅해주기 // 원하는 모금액 50프로
// 가스비 제외 환불 모금액 100프로 이상 됐어요 그래도 nft 가지고 투표도 하는거고 